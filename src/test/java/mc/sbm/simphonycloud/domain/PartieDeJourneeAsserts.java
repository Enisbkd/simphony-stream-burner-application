package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PartieDeJourneeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartieDeJourneeAllPropertiesEquals(PartieDeJournee expected, PartieDeJournee actual) {
        assertPartieDeJourneeAutoGeneratedPropertiesEquals(expected, actual);
        assertPartieDeJourneeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartieDeJourneeAllUpdatablePropertiesEquals(PartieDeJournee expected, PartieDeJournee actual) {
        assertPartieDeJourneeUpdatableFieldsEquals(expected, actual);
        assertPartieDeJourneeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartieDeJourneeAutoGeneratedPropertiesEquals(PartieDeJournee expected, PartieDeJournee actual) {
        assertThat(actual)
            .as("Verify PartieDeJournee auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartieDeJourneeUpdatableFieldsEquals(PartieDeJournee expected, PartieDeJournee actual) {
        assertThat(actual)
            .as("Verify PartieDeJournee relevant properties")
            .satisfies(a -> assertThat(a.getTimeRangeStart()).as("check timeRangeStart").isEqualTo(expected.getTimeRangeStart()))
            .satisfies(a -> assertThat(a.getTimeRangeEnd()).as("check timeRangeEnd").isEqualTo(expected.getTimeRangeEnd()))
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPartieDeJourneeUpdatableRelationshipsEquals(PartieDeJournee expected, PartieDeJournee actual) {
        // empty method
    }
}
