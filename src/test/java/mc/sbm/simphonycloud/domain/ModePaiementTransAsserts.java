package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ModePaiementTransAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModePaiementTransAllPropertiesEquals(ModePaiementTrans expected, ModePaiementTrans actual) {
        assertModePaiementTransAutoGeneratedPropertiesEquals(expected, actual);
        assertModePaiementTransAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModePaiementTransAllUpdatablePropertiesEquals(ModePaiementTrans expected, ModePaiementTrans actual) {
        assertModePaiementTransUpdatableFieldsEquals(expected, actual);
        assertModePaiementTransUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModePaiementTransAutoGeneratedPropertiesEquals(ModePaiementTrans expected, ModePaiementTrans actual) {
        assertThat(actual)
            .as("Verify ModePaiementTrans auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModePaiementTransUpdatableFieldsEquals(ModePaiementTrans expected, ModePaiementTrans actual) {
        assertThat(actual)
            .as("Verify ModePaiementTrans relevant properties")
            .satisfies(a -> assertThat(a.getTenderId()).as("check tenderId").isEqualTo(expected.getTenderId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getExtensions()).as("check extensions").isEqualTo(expected.getExtensions()))
            .satisfies(a -> assertThat(a.getOrgShortName()).as("check orgShortName").isEqualTo(expected.getOrgShortName()))
            .satisfies(a -> assertThat(a.getLocRef()).as("check locRef").isEqualTo(expected.getLocRef()))
            .satisfies(a -> assertThat(a.getRvcRef()).as("check rvcRef").isEqualTo(expected.getRvcRef()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertModePaiementTransUpdatableRelationshipsEquals(ModePaiementTrans expected, ModePaiementTrans actual) {
        // empty method
    }
}
