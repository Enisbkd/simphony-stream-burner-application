package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaxeClassTransAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeClassTransAllPropertiesEquals(TaxeClassTrans expected, TaxeClassTrans actual) {
        assertTaxeClassTransAutoGeneratedPropertiesEquals(expected, actual);
        assertTaxeClassTransAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeClassTransAllUpdatablePropertiesEquals(TaxeClassTrans expected, TaxeClassTrans actual) {
        assertTaxeClassTransUpdatableFieldsEquals(expected, actual);
        assertTaxeClassTransUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeClassTransAutoGeneratedPropertiesEquals(TaxeClassTrans expected, TaxeClassTrans actual) {
        assertThat(actual)
            .as("Verify TaxeClassTrans auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeClassTransUpdatableFieldsEquals(TaxeClassTrans expected, TaxeClassTrans actual) {
        assertThat(actual)
            .as("Verify TaxeClassTrans relevant properties")
            .satisfies(a -> assertThat(a.getOrgShortName()).as("check orgShortName").isEqualTo(expected.getOrgShortName()))
            .satisfies(a -> assertThat(a.getLocRef()).as("check locRef").isEqualTo(expected.getLocRef()))
            .satisfies(a -> assertThat(a.getRvcRef()).as("check rvcRef").isEqualTo(expected.getRvcRef()))
            .satisfies(a -> assertThat(a.getTaxClassId()).as("check taxClassId").isEqualTo(expected.getTaxClassId()))
            .satisfies(a -> assertThat(a.getActiveTaxRateRefs()).as("check activeTaxRateRefs").isEqualTo(expected.getActiveTaxRateRefs()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxeClassTransUpdatableRelationshipsEquals(TaxeClassTrans expected, TaxeClassTrans actual) {
        // empty method
    }
}
