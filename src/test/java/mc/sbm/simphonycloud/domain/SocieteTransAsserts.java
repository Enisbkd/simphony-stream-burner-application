package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SocieteTransAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocieteTransAllPropertiesEquals(SocieteTrans expected, SocieteTrans actual) {
        assertSocieteTransAutoGeneratedPropertiesEquals(expected, actual);
        assertSocieteTransAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocieteTransAllUpdatablePropertiesEquals(SocieteTrans expected, SocieteTrans actual) {
        assertSocieteTransUpdatableFieldsEquals(expected, actual);
        assertSocieteTransUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocieteTransAutoGeneratedPropertiesEquals(SocieteTrans expected, SocieteTrans actual) {
        assertThat(actual)
            .as("Verify SocieteTrans auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocieteTransUpdatableFieldsEquals(SocieteTrans expected, SocieteTrans actual) {
        assertThat(actual)
            .as("Verify SocieteTrans relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getNomCourt()).as("check nomCourt").isEqualTo(expected.getNomCourt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocieteTransUpdatableRelationshipsEquals(SocieteTrans expected, SocieteTrans actual) {
        // empty method
    }
}
