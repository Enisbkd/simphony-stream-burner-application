package mc.sbm.simphonycloud.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RemiseBIAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRemiseBIAllPropertiesEquals(RemiseBI expected, RemiseBI actual) {
        assertRemiseBIAutoGeneratedPropertiesEquals(expected, actual);
        assertRemiseBIAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRemiseBIAllUpdatablePropertiesEquals(RemiseBI expected, RemiseBI actual) {
        assertRemiseBIUpdatableFieldsEquals(expected, actual);
        assertRemiseBIUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRemiseBIAutoGeneratedPropertiesEquals(RemiseBI expected, RemiseBI actual) {
        assertThat(actual)
            .as("Verify RemiseBI auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRemiseBIUpdatableFieldsEquals(RemiseBI expected, RemiseBI actual) {
        assertThat(actual)
            .as("Verify RemiseBI relevant properties")
            .satisfies(a -> assertThat(a.getNum()).as("check num").isEqualTo(expected.getNum()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPosPercent()).as("check posPercent").isEqualTo(expected.getPosPercent()))
            .satisfies(a -> assertThat(a.getRptGrpNum()).as("check rptGrpNum").isEqualTo(expected.getRptGrpNum()))
            .satisfies(a -> assertThat(a.getRptGrpName()).as("check rptGrpName").isEqualTo(expected.getRptGrpName()))
            .satisfies(a -> assertThat(a.getLocRef()).as("check locRef").isEqualTo(expected.getLocRef()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRemiseBIUpdatableRelationshipsEquals(RemiseBI expected, RemiseBI actual) {
        // empty method
    }
}
